---

- name: Create piwik group
  group:
    name: '{{ piwik__group }}'
    system: True
    state: present

- name: Create piwik user
  user:
    name: '{{ piwik__user }}'
    group: '{{ piwik__group }}'
    home: '{{ piwik__home }}'
    shell: '/bin/false'
    createhome: False
    comment: 'Piwik'
    system: True
    state: present

- name: Create home directory.
  file:
    path: '{{ piwik__home }}'
    state: 'directory'
    owner: '{{ piwik__user }}'
    group: '{{ piwik__group }}'
    mode: 0750

- name: Create www directory.
  file:
    path: '{{ piwik__www }}'
    state: 'directory'
    owner: '{{ piwik__user }}'
    group: '{{ piwik__group }}'
    mode: 0750

- block:
    - name: Install maintainer key.
      apt_key:
        keyserver: '{{ ansible_local.core.keyserver
                       if (ansible_local|d() and ansible_local.core|d() and
                           ansible_local.core.keyserver|d())
                       else "hkp://pool.sks-keyservers.net" }}'
        id: '{{ piwik__pgp_key | replace(" ", "") }}'

    - name: Ensure the source directory is present.
      file:
        path: '{{ piwik__src }}'
        state: 'directory'

    - name: Download sources.
      get_url:
        url: '{{ piwik__src_url }}'
        dest: '{{ piwik__src }}'

    - name: Download source signature.
      get_url:
        url: '{{ piwik__src_sign_url }}'
        dest: '{{ piwik__src }}'

    - name: Check integrity of downloaded sources.
      shell: 'gpg --verify {{ piwik__src_sign_url | basename }} {{ piwik__src_url | basename }}'
      args:
        chdir: '{{ piwik__src }}'
      register: piwik__integrity_checked
      failed_when: piwik__integrity_checked.rc > 0

    - name: Install sources in www directory.
      unarchive:
        src: '{{ piwik__src }}/{{ piwik__src_url | basename }}'
        dest: '{{ piwik__www }}'
        extra_opts: [ '--strip-components=1' ]
        owner: '{{ piwik__user }}'
        group: '{{ piwik__group }}'
        remote_src: 'yes'

    - name: Remove unexpected directories
      file:
        path: '{{ piwik__www }}/{{ item }}'
        state: 'absent'
      with_items:
        - 'plugins/Morpheus/icons/submodules'

  when: ansible_local.piwik is undefined or (ansible_local.piwik is defined and
          ((not ansible_local.piwik.enabled) or ansible_local.piwik.version != piwik__version))

- name: Ensure that Ansible local facts directory is present
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save Ansible facts in facts.d
  template:
    src: 'etc/ansible/facts.d/piwik.fact.j2'
    dest: '/etc/ansible/facts.d/piwik.fact'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: piwik__register_local_facts

- name: Gather facts if they were changed
  action: setup
  when: piwik__register_local_facts.changed
